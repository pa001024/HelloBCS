var B={getMetaAsync:function(a){var b="/api/filemetas?blocks=1&dlink=1",c=Promise.defer();return $.post(b,{target:JSON.stringify([a])},function(a){a.errno?c.reject(a):c.resolve(a.info[0])}),c.promise},getShareRecordAsync:function(){var a="/share/record?order=ctime&desc=1&page=",b=[],c=Promise.defer();return function d(e){$.getJSON(a+e,function(a){b=b.concat(a.list),a.nextpage?d(++e):c.resolve(b)})}(1),c.promise},getDirAsync:function(a){var b=Promise.defer(),c=[];return function d(e){$.getJSON("/api/list?&num=200&page="+e+"&order=name&showempty=0&dir="+encodeURI(a),function(a){c=c.concat(a.list),200==a.list.legnth?d(++e):b.resolve(c)})}(1),b.promise},createDirAsync:function(a){var b="/api/create?a=commit",c=Promise.defer();return $.post(b,{path:"/"+a,isdir:1,size:"",block_list:"[]",method:"post"},function(a){a.errno?c.reject(a):c.resolve(a)}),c.promise},createShareAsync:function(a,b){var c="/share/set",d=Promise.defer();if(b&&4!=encodeURIComponent(b).replace(/%../g,".").length)throw new Error(b+"is not a valid password!");return this.getMetaAsync(a).then(function(a){$.post(c,{fid_list:JSON.stringify([a.fs_id]),schannel:4,channel_list:"[]",pwd:b||"1111"},function(a){d.resolve(a)})}),d.promise},createShareByIdAsync:function(a,b){var c="/share/set",d=Promise.defer();if(b&&4!=encodeURIComponent(b).replace(/%../g,".").length)throw new Error(b+"is not a valid password!");return $.post(c,{fid_list:JSON.stringify([a]),schannel:4,channel_list:"[]",pwd:b||"1111"},function(a){d.resolve(a)}),d.promise},cancelShareAsync:function(a){var b="/share/cancel",c=Promise.defer();return $.post(b,{shareid_list:JSON.stringify(a)},function(a){c.resolve(a)}),c.promise},transferFileAsync:function(a,b,c,d){var e="/share/transfer",f=Promise.defer();return $.post(e+"?shareid="+a+"&from="+b,{filelist:JSON.stringify([(c.startsWith("/")?"":"/")+c]),path:d},function(a){f.resolve(a)}),f.promise},renameFileAsync:function(a,b){return this.renameFileBatchAsync([{path:a,newname:b}])},renameFileBatchAsync:function(a){var b=Promise.defer();return $.post("/api/filemanager?opera=rename&async=2",{filelist:JSON.stringify(a)},function(c){$.post("/share/taskquery?&taskid="+c.taskid,{filelist:JSON.stringify(a)},function(a){b.resolve(a)})}),b.promise},copyFileAsync:function(a,b,c){return this.copyFileBatchAsync([{path:a,dest:b,newname:c}])},copyFileBatchAsync:function(a){var b=Promise.defer();return $.post("/api/filemanager?opera=copy&async=2",{filelist:JSON.stringify(a)},function(c){$.post("/share/taskquery?&taskid="+c.taskid,{filelist:JSON.stringify(a)},function(a){b.resolve(a)})}),b.promise},moveFileAsync:function(a,b,c){return this.moveFileBatchAsync([{path:a,dest:b,newname:c}])},moveFileBatchAsync:function(a){var b=Promise.defer();return $.post("/api/filemanager?opera=move&async=2",{filelist:JSON.stringify(a)},function(c){$.post("/share/taskquery?&taskid="+c.taskid,{filelist:JSON.stringify(a)},function(a){b.resolve(a)})}),b.promise},deleteFileAsync:function(a){return this.deleteFileBatchAsync([a])},deleteFileBatchAsync:function(a){var b=Promise.defer();return $.post("/api/filemanager?opera=delete&async=2",{filelist:JSON.stringify(a)},function(c){$.post("/share/taskquery?&taskid="+c.taskid,{filelist:JSON.stringify(a)},function(a){b.resolve(a)})}),b.promise}};