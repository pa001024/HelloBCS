window.B={createGroupInvite:function(a){var b="/mbox/group/invite?gid=";return new Promise(function(c,d){$.get(b+a,function(a){a.errno?d(a):c(a.link)})})},getMetaAsync:function(a){var b="/api/filemetas?blocks=1&dlink=1";return new Promise(function(c,d){$.post(b,{target:JSON.stringify([a])},function(a){a.errno?d(a):c(a.info[0])})})},getShareRecordAsync:function(){var a="/share/record?order=ctime&desc=1&page=",b=[];return new Promise(function(c,d){!function e(d){$.getJSON(a+d,function(a){b=b.concat(a.list),a.nextpage?e(++d):c(b)})}(1)})},getDirAsync:function(a){return new Promise(function(b,c){var d=[];!function e(c){$.getJSON("/api/list?&num=200&page="+c+"&order=name&showempty=0&dir="+encodeURI(a),function(a){d=d.concat(a.list),200==a.list.legnth?e(++c):b(d)})}(1)})},createDirAsync:function(a){var b="/api/create?a=commit";return new Promise(function(c,d){$.post(b,{path:"/"+a,isdir:1,size:"",block_list:"[]",method:"post"},function(a){a.errno?d(a):c(a)})})},createShareAsync:function(a,b,c){var d=this;return this.getMetaAsync(a).then(function(a){return d.createShareByIdAsync(a.fs_id,b,c)})},createShareByIdAsync:function(a,b,c){var d=c?"/share/pset":"/share/set";return new Promise(function(c,e){if(b&&4!=encodeURIComponent(b).replace(/%../g,".").length)throw new Error(b+"is not a valid password!");$.post(d,{fid_list:JSON.stringify([a]),schannel:b?4:0,channel_list:"[]",pwd:b},function(a){c(a)})})},cancelShareAsync:function(a){var b="/share/cancel";return new Promise(function(c,d){$.post(b,{shareid_list:JSON.stringify(a)},function(a){c(a)})})},transferFileAsync:function(a,b,c,d){var e="/share/transfer";return new Promise(function(f,g){$.post(e+"?shareid="+a+"&from="+b,{filelist:JSON.stringify([(c.startsWith("/")?"":"/")+c]),path:d},function(a){f(a)})})},renameFileAsync:function(a,b){return this.renameFileBatchAsync([{path:a,newname:b}])},renameFileBatchAsync:function(a){return new Promise(function(b,c){$.post("/api/filemanager?opera=rename&async=2",{filelist:JSON.stringify(a)},function(c){$.post("/share/taskquery?&taskid="+c.taskid,{filelist:JSON.stringify(a)},function(a){b(a)})})})},copyFileAsync:function(a,b,c){return this.copyFileBatchAsync([{path:a,dest:b,newname:c}])},copyFileBatchAsync:function(a){return new Promise(function(b,c){$.post("/api/filemanager?opera=copy&async=2",{filelist:JSON.stringify(a)},function(c){$.post("/share/taskquery?&taskid="+c.taskid,{filelist:JSON.stringify(a)},function(a){b(a)})})})},moveFileAsync:function(a,b,c){return this.moveFileBatchAsync([{path:a,dest:b,newname:c}])},moveFileBatchAsync:function(a){return new Promise(function(b,c){$.post("/api/filemanager?opera=move&async=2",{filelist:JSON.stringify(a)},function(c){$.post("/share/taskquery?&taskid="+c.taskid,{filelist:JSON.stringify(a)},function(a){b(a)})})})},deleteFileAsync:function(a){return this.deleteFileBatchAsync([a])},deleteFileBatchAsync:function(a){return new Promise(function(b,c){$.post("/api/filemanager?opera=delete&async=2",{filelist:JSON.stringify(a)},function(c){$.post("/share/taskquery?&taskid="+c.taskid,{filelist:JSON.stringify(a)},function(a){b(a)})})})}};