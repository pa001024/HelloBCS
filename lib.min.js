var B={getMetaAsync:function(e){var r="/api/filemetas?blocks=1&dlink=1",n=Promise.defer();return $.post(r,{target:JSON.stringify([e])},function(e){e.errno?n.reject(e):n.resolve(e.info[0])}),n.promise},getShareRecordAsync:function(){var e="/share/record?order=ctime&desc=1&page=",r=[],n=Promise.defer();return function i(t){$.getJSON(e+t,function(e){r=r.concat(e.list),e.nextpage?i(++t):n.resolve(r)})}(1),n.promise},getDirAsync:function(e){var r=Promise.defer(),n=[];return function i(t){$.getJSON("/api/list?&num=200&page="+t+"&order=name&showempty=0&dir="+encodeURI(e),function(e){n=n.concat(e.list),200==e.list.legnth?i(++t):r.resolve(n)})}(1),r.promise},createDirAsync:function(e){var r="/api/create?a=commit",n=Promise.defer();return $.post(r,{path:"/"+e,isdir:1,size:"",block_list:"[]",method:"post"},function(e){e.errno?n.reject(e):n.resolve(e)}),n.promise},createShareAsync:function(e,r){var n="/share/set",i=Promise.defer();if(r&&4!=encodeURIComponent(r).replace(/%../g,".").length)throw new Error(r+"is not a valid password!");return this.getMetaAsync(e).then(function(e){$.post(n,{fid_list:JSON.stringify([e.fs_id]),schannel:4,channel_list:"[]",pwd:r||"1111"},function(e){i.resolve(e)})}),i.promise},createShareByIdAsync:function(e,r){var n="/share/set",i=Promise.defer();if(r&&4!=encodeURIComponent(r).replace(/%../g,".").length)throw new Error(r+"is not a valid password!");return $.post(n,{fid_list:JSON.stringify([e]),schannel:4,channel_list:"[]",pwd:r||"1111"},function(e){i.resolve(e)}),i.promise},cancelShareAsync:function(e){var r="/share/cancel",n=Promise.defer();return $.post(r,{shareid_list:JSON.stringify(e)},function(e){n.resolve(e)}),n.promise},transferFileAsync:function(e,r,n,i){var t="/share/transfer",s=Promise.defer();return $.post(t+"?shareid="+e+"&from="+r,{filelist:JSON.stringify(["/"+n]),path:i},function(e){s.resolve(e)}),s.promise},renameFileAsync:function(e,r){return this.renameFileBatchAsync([{path:e,newname:r}])},renameFileBatchAsync:function(e){var r=Promise.defer();return $.post("/api/filemanager?opera=rename&async=2",{filelist:JSON.stringify(e)},function(n){$.post("/share/taskquery?&taskid="+n.taskid,{filelist:JSON.stringify(e)},function(e){r.resolve(e)})}),r.promise},copyFileAsync:function(e,r,n){return this.copyFileBatchAsync([{path:e,dest:r,newname:n}])},copyFileBatchAsync:function(e){var r=Promise.defer();return $.post("/api/filemanager?opera=copy&async=2",{filelist:JSON.stringify(e)},function(n){$.post("/share/taskquery?&taskid="+n.taskid,{filelist:JSON.stringify(e)},function(e){r.resolve(e)})}),r.promise},moveFileAsync:function(e,r,n){return this.moveFileBatchAsync([{path:e,dest:r,newname:n}])},moveFileBatchAsync:function(e){var r=Promise.defer();return $.post("/api/filemanager?opera=move&async=2",{filelist:JSON.stringify(e)},function(n){$.post("/share/taskquery?&taskid="+n.taskid,{filelist:JSON.stringify(e)},function(e){r.resolve(e)})}),r.promise},deleteFileAsync:function(e){return this.deleteFileBatchAsync([e])},deleteFileBatchAsync:function(e){var r=Promise.defer();return $.post("/api/filemanager?opera=delete&async=2",{filelist:JSON.stringify(e)},function(n){$.post("/share/taskquery?&taskid="+n.taskid,{filelist:JSON.stringify(e)},function(e){r.resolve(e)})}),r.promise}};